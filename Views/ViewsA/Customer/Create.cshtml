@model Khareedo.Models.Customers

@{
    ViewBag.Title = "Cliente";
    ViewBag.SubTitle = "Crear";
    Layout = "~/Views/ViewsA/shared/_Layout.cshtml";
}

@using (Html.BeginForm("Create", "Customer", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-md-8">
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    <label class="control-label col-md-2">
                        Primer Nombre
                    </label>
                    <div class="col-md-10">
                        <input name="First_Name" id="First_Name" type="text" placeholder="Ingrese su Primer Nombre" class="form-input" required value="@Request.Form["First_Name"]">
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">
                        Apellido
                    </label>
                    <div class="col-md-10">
                        <input name="Last_Name" id="Last_Name" type="text" placeholder="Ingrese su Apellido" class="form-input" required value="@Request.Form["Last_Name"]">
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">
                        Edad
                    </label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">
                        Género
                    </label>
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Gender, new List<SelectListItem>
                        {
                            new SelectListItem { Text = "Masculino", Value = "Masculino" },
                            new SelectListItem { Text = "Femenino", Value = "Femenino" },
                            new SelectListItem { Text = "Otro", Value = "Otro" }
                        }, "-- Seleccione Género --", new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    <label class="control-label col-md-2">
                        Usuario
                    </label>
                    <div class="col-md-10">
                        <input name="UserName" id="UserName" type="text" placeholder="Ingrese el nombre de Usuario" class="form-input" required value="@Request.Form["UserName"]">
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">
                        Contraseña
                    </label>
                    <div class="col-md-10">
                        <input id="Password" name="Password" type="text" placeholder="Contraseña" class="form-input"
                               pattern="(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*\W).{8,}"
                               title="La contraseña debe contener al menos 8 caracteres, incluyendo al menos una letra mayúscula, una letra minúscula, un número y un carácter especial."
                               required
                               value="@Request.Form["Password"]">
                    </div>
                </div>



                <div class="form-group">
                    <label class="control-label col-md-2">
                        Correo Electrónico
                    </label>
                    <div class="col-md-10">
                        <input id="Email" name="Email" type="email" placeholder="Ingrese su correo electrónico" title="Ingrese un correo electrónico válido" class="form-input" value="@Request.Form["Email"]" required>
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">
                        Teléfono
                    </label>
                    <div class="col-md-10">
                        <input id="Mobile1" name="Mobile1" type="text" placeholder="Ingrese su Teléfono" class="form-input"
                               pattern="[0-9]{8}" title="El teléfono debe contener exactamente 8 números" required
                               value="@Request.Form["Mobile1"]">
                        @Html.ValidationMessageFor(model => model.Mobile1, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">
                        Provincia
                    </label>
                    <div class="col-md-10">
                        <select id="Country" name="Country" required class="form-control">
                            <option value="">-- Seleccione su Provincia --</option>
                            <option value="San José">San José</option>
                            <option value="Alajuela">Alajuela</option>
                            <option value="Cartago">Cartago</option>
                            <option value="Heredia">Heredia</option>
                            <option value="Guanacaste">Guanacaste</option>
                            <option value="Puntarenas">Puntarenas</option>
                            <option value="Limón">Limón</option>
                        </select>
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">
                        Dirección
                    </label>
                    <div class="col-md-10">
                        <input name="Address1" id="Address1" type="text" placeholder="Ingrese su Dirección" class="form-input" required value="@Request.Form["Address1"]">
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">
                        Notas
                    </label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Crear" class="btn btn-info" />
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
        </div>
    </div>
}

<div>
    <a href="@Url.Action("Index")" class="btn btn-primary">Volver</a>
</div>

<style>
    .form-input {
        width: 100%;
        padding: 8px;
        margin-bottom: 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
        box-sizing: border-box;
    }

    .password-toggle-icon {
        position: absolute;
        top: 35%;
        transform: translateY(-50%);
        right: 10px;
        cursor: pointer;
        color: #777;
        font-size: 18px;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var inputs = document.querySelectorAll('.form-input');

        inputs.forEach(function (input) {
            input.addEventListener('blur', function () {
                if (!this.classList.contains('exempt-validation') && this.value.trim() === '' && !this.classList.contains('error')) {
                    this.setCustomValidity('Por favor ingresar ' + this.getAttribute('placeholder').toLowerCase());
                } else {
                    this.setCustomValidity('');
                }
            });
        });
    });
</script>
