@model Khareedo.Models.Products

@{
    ViewBag.Title = "Crear Producto";
    Layout = "~/Views/ViewsA/shared/_Layout.cshtml";
}


@using (Html.BeginForm("Create", "Productos", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <label class="control-label col-md-2">
                Nombre
            </label>
            <div class="col-md-4">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">
                Proveedor
            </label>
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.SupplierID, (IEnumerable<SelectListItem>)ViewBag.Suppliers, "Seleccione un proveedor", new { @class = "form-control input-sm", required = "required" })
                @Html.ValidationMessageFor(model => model.SupplierID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">
                Categoría
            </label>
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.CategoryID, (IEnumerable<SelectListItem>)ViewBag.Categories, "Seleccione una categoría", new { @class = "form-control input-sm", required = "required" })
                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">
                Subcategoría
            </label>
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.SubCategoryID, (IEnumerable<SelectListItem>)ViewBag.SubCategoryID, "Seleccione una subcategoría", new { @class = "form-control input-sm", required = "required" })
                @Html.ValidationMessageFor(model => model.SubCategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">
                Precio con Oferta
            </label>
            <div class="col-md-4">
                @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control input-sm", required = "required" } })
                @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">
                Precio Sin Oferta
            </label>
            <div class="col-md-4">
                @Html.EditorFor(model => model.OldPrice, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.OldPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">
                Producto Disponible
            </label>
            <div class="col-md-4">
                <div class="checkbox">
                    @Html.EditorFor(model => model.ProductAvailable, new { htmlAttributes = new { @class = "form-control input-sm", required = "required" } })
                    @Html.ValidationMessageFor(model => model.ProductAvailable, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Imagen", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="imageFile" />
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">
                Peso
            </label>
            <div class="col-md-4">
                @Html.EditorFor(model => model.UnitWeight, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.UnitWeight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">
                Unidades Disponibles
            </label>
            <div class="col-md-4">
                @Html.EditorFor(model => model.UnitInStock, new { htmlAttributes = new { @class = "form-control input-sm", required = "required" } })
                @Html.ValidationMessageFor(model => model.UnitInStock, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">
                Unidades en Orden
            </label>
            <div class="col-md-4">
                @Html.EditorFor(model => model.UnitOnOrder, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.UnitOnOrder, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">
                Oferta Disponible
            </label>
            <div class="col-md-4">
                <div class="checkbox">
                    @Html.EditorFor(model => model.AddBadge, new { htmlAttributes = new { @class = "form-control input-sm" } })
                    @Html.ValidationMessageFor(model => model.AddBadge, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">
                Título de la Oferta
            </label>
            <div class="col-md-4">
                @Html.EditorFor(model => model.OfferTitle, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.OfferTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">
                Color de Oferta
            </label>
            <div class="col-md-4">
                @Html.DropDownListFor(
                    model => model.OfferBadgeClass,
                    new SelectList(
                        new List<SelectListItem>
                        {
                            new SelectListItem { Text = "Verde", Value = "aa-sale" },
                            new SelectListItem { Text = "Naranja", Value = "aa-hot" },
                            new SelectListItem { Text = "Rojo", Value = "aa-sold-out" }
                        },
                        "Value",
                        "Text"
                    ),
                    new { @class = "form-control input-sm" }
                )
                @Html.ValidationMessageFor(model => model.OfferBadgeClass, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">
                Descripción Corta
            </label>
            <div class="col-md-4">
                @Html.TextAreaFor(model => model.ShortDescription, new { @class = "form-control input-sm", rows = 3 })
                @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">
                Descripción Larga
            </label>
            <div class="col-md-4">
                @Html.TextAreaFor(model => model.LongDescription, new { @class = "form-control input-sm", rows = 5 })
                @Html.ValidationMessageFor(model => model.LongDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar Cambios" class="btn btn-info" />
            </div>
        </div>
    </div>
}

<div>
    <a href="@Url.Action("Index")" class="btn btn-primary">Volver</a>
</div>

<script>

    document.addEventListener('DOMContentLoaded', function () {
        var inputs = document.querySelectorAll('.form-input');

        inputs.forEach(function (input) {
            input.addEventListener('blur', function () {
                if (!this.classList.contains('exempt-validation') && this.value.trim() === '' && !this.classList.contains('error')) {
                    this.setCustomValidity('Por favor ingresar ' + this.getAttribute('placeholder').toLowerCase());
                } else {
                    this.setCustomValidity('');
                }
            });
        });
    });
</script>
